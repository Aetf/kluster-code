// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { SealedSecretArgs } from "./sealedSecret";
export type SealedSecret = import("./sealedSecret").SealedSecret;
export const SealedSecret: typeof import("./sealedSecret").SealedSecret = null as any;
utilities.lazyLoad(exports, ["SealedSecret"], () => require("./sealedSecret"));

export { SealedSecretListArgs } from "./sealedSecretList";
export type SealedSecretList = import("./sealedSecretList").SealedSecretList;
export const SealedSecretList: typeof import("./sealedSecretList").SealedSecretList = null as any;
utilities.lazyLoad(exports, ["SealedSecretList"], () => require("./sealedSecretList"));

export { SealedSecretPatchArgs } from "./sealedSecretPatch";
export type SealedSecretPatch = import("./sealedSecretPatch").SealedSecretPatch;
export const SealedSecretPatch: typeof import("./sealedSecretPatch").SealedSecretPatch = null as any;
utilities.lazyLoad(exports, ["SealedSecretPatch"], () => require("./sealedSecretPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:bitnami.com/v1alpha1:SealedSecret":
                return new SealedSecret(name, <any>undefined, { urn })
            case "kubernetes:bitnami.com/v1alpha1:SealedSecretList":
                return new SealedSecretList(name, <any>undefined, { urn })
            case "kubernetes:bitnami.com/v1alpha1:SealedSecretPatch":
                return new SealedSecretPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "bitnami.com/v1alpha1", _module)
