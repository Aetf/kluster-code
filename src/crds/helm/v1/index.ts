// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { HelmChartArgs } from "./helmChart";
export type HelmChart = import("./helmChart").HelmChart;
export const HelmChart: typeof import("./helmChart").HelmChart = null as any;
utilities.lazyLoad(exports, ["HelmChart"], () => require("./helmChart"));

export { HelmChartConfigArgs } from "./helmChartConfig";
export type HelmChartConfig = import("./helmChartConfig").HelmChartConfig;
export const HelmChartConfig: typeof import("./helmChartConfig").HelmChartConfig = null as any;
utilities.lazyLoad(exports, ["HelmChartConfig"], () => require("./helmChartConfig"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:helm.cattle.io/v1:HelmChart":
                return new HelmChart(name, <any>undefined, { urn })
            case "kubernetes:helm.cattle.io/v1:HelmChartConfig":
                return new HelmChartConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "helm.cattle.io/v1", _module)
